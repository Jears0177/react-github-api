{"ast":null,"code":"var _jsxFileName = \"/home/jears0177/Projects/Paralect/startup-summer2021/src/components/Reposotories/Repositories.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Repositories.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRepos } from \"../../store/reducers/user\";\nimport { Repository } from \"./Repository/Repository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Repositories = () => {\n  _s();\n\n  const state = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  let pageCount = Math.ceil(state.user.public_repos / 4);\n  let pages = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i);\n  }\n\n  console.log(state.repo);\n\n  const onClicker = page => {\n    dispatch(getRepos(page, 4, state.name));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"repo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo-header\",\n      children: [\"Repositories(\", state ? state.user.public_repos : '', \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), state.repo.map(repo => {\n      return /*#__PURE__*/_jsxDEV(Repository, {\n        name: repo.name,\n        description: repo.description,\n        url: repo.html_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this);\n    }), pages.map(page => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => onClicker(page),\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Repositories, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/home/jears0177/Projects/Paralect/startup-summer2021/src/components/Reposotories/Repositories.js"],"names":["React","useDispatch","useSelector","getRepos","Repository","Repositories","state","user","dispatch","pageCount","Math","ceil","public_repos","pages","i","push","console","log","repo","onClicker","page","name","map","description","html_url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,SAAQC,UAAR,QAAyB,yBAAzB;;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAMC,KAAK,GAAGJ,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAzB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAIQ,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACC,IAAN,CAAWK,YAAX,GAA0B,CAApC,CAAhB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,SAArB,EAAgCK,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,IAAlB;;AAEA,QAAMC,SAAS,GAAIC,IAAD,IAAU;AACxBZ,IAAAA,QAAQ,CAACL,QAAQ,CAACiB,IAAD,EAAO,CAAP,EAAUd,KAAK,CAACe,IAAhB,CAAT,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,kCAA2Cf,KAAK,GAAGA,KAAK,CAACC,IAAN,CAAWK,YAAd,GAA6B,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKN,KAAK,CAACY,IAAN,CAAWI,GAAX,CAAeJ,IAAI,IAAI;AACpB,0BACI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,IAAI,CAACG,IAAvB;AAA6B,QAAA,WAAW,EAAEH,IAAI,CAACK,WAA/C;AAA4D,QAAA,GAAG,EAAEL,IAAI,CAACM;AAAtE;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA,CAFL,EAOKX,KAAK,CAACS,GAAN,CAAUF,IAAI,IAAI;AACf,0BAAO;AAAM,QAAA,OAAO,EAAE,MAAID,SAAS,CAACC,IAAD,CAA5B;AAAA,kBAAqCA;AAArC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA5BM;;GAAMf,Y;UACKH,W,EACGD,W;;;KAFRI,Y","sourcesContent":["import React from 'react'\nimport './Repositories.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getRepos} from \"../../store/reducers/user\";\nimport {Repository} from \"./Repository/Repository\";\n\n\nexport const Repositories = () => {\n    const state = useSelector(state => state.user)\n    const dispatch = useDispatch();\n    let pageCount = Math.ceil(state.user.public_repos / 4)\n    let pages = []\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i)\n    }\n    console.log(state.repo)\n\n    const onClicker = (page) => {\n        dispatch(getRepos(page, 4, state.name))\n    }\n\n    return (\n        <div className='repo-container'>\n            <div className='repo-header'>Repositories({state ? state.user.public_repos : ''})</div>\n            {state.repo.map(repo => {\n                return (\n                    <Repository name={repo.name} description={repo.description} url={repo.html_url}/>\n                )\n            })}\n            {pages.map(page => {\n                return <span onClick={()=>onClicker(page)}>{page}</span>\n            })\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}