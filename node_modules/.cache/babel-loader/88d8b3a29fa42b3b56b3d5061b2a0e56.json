{"ast":null,"code":"var _jsxFileName = \"/home/jears0177/Projects/Paralect/startup-summer2021/src/components/Reposotories/Repositories.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Repositories.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Repositories = () => {\n  _s();\n\n  const state = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  let pageCount = Math.ceil(state.user.public_repos / 4);\n  let pages = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Repositories(\", state ? state.user.public_repos : '', \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), state.repo.map(repo => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: repo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    }), pages.map(page => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => console.log(page),\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Repositories, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/home/jears0177/Projects/Paralect/startup-summer2021/src/components/Reposotories/Repositories.js"],"names":["React","useDispatch","useSelector","Repositories","state","user","dispatch","pageCount","Math","ceil","public_repos","pages","i","push","repo","map","name","description","page","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAMC,KAAK,GAAGF,WAAW,CAACE,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAzB;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,MAAIM,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACC,IAAN,CAAWK,YAAX,GAA0B,CAApC,CAAhB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,SAArB,EAAgCK,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BACI;AAAA,kCAAmBR,KAAK,GAAGA,KAAK,CAACC,IAAN,CAAWK,YAAd,GAA6B,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKN,KAAK,CAACU,IAAN,CAAWC,GAAX,CAAeD,IAAI,IAAI;AACpB,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAA,oBAAMA,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAMF,IAAI,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPA,CAFL,EAUKN,KAAK,CAACI,GAAN,CAAUG,IAAI,IAAI;AACf,0BAAO;AAAM,QAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAArB;AAAA,kBAAyCA;AAAzC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA,CAVL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA3BM;;GAAMf,Y;UACKD,W,EACGD,W;;;KAFRE,Y","sourcesContent":["import React from 'react'\nimport './Repositories.css'\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nexport const Repositories = () => {\n    const state = useSelector(state => state.user)\n    const dispatch = useDispatch();\n\n    let pageCount = Math.ceil(state.user.public_repos / 4)\n    let pages = []\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i)\n    }\n\n    return (\n        <div className=''>\n            <div>Repositories({state ? state.user.public_repos : ''})</div>\n            {state.repo.map(repo => {\n                return (\n                    <div className='repo'>\n                        <div>{repo.name}</div>\n                        <div>{repo.description}</div>\n                    </div>\n                )\n            })}\n            {pages.map(page => {\n                return <span onClick={() => console.log(page)}>{page}</span>\n            })\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}