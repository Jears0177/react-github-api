{"ast":null,"code":"import axios from \"axios\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_USER_REPO = 'SET_USER_REPO';\nconst SET_USER_NAME = 'SET_USER_NAME';\nconst SET_PAGE = 'SET_PAGE';\nconst SET_USER_ERROR = 'SET_USER_ERROR';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst initialState = {\n  user: {},\n  repo: [],\n  name: '',\n  page: null,\n  userError: false,\n  isFetching: false\n};\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        user: { ...action.payload\n        },\n        userError: false\n      };\n\n    case SET_USER_REPO:\n      return { ...state,\n        repo: [...action.payload]\n      };\n\n    case SET_USER_NAME:\n      return { ...state,\n        name: action.payload\n      };\n\n    case SET_USER_ERROR:\n      return { ...state,\n        userError: true\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.payload\n      };\n\n    case SET_PAGE:\n      return { ...state,\n        page: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\nexport const setUserName = name => {\n  return {\n    type: SET_USER_NAME,\n    payload: name\n  };\n};\nexport const setUserData = data => {\n  return {\n    type: SET_USER_DATA,\n    payload: data\n  };\n};\nexport const setUserRepo = data => {\n  return {\n    type: SET_USER_REPO,\n    payload: data\n  };\n};\nexport const setUserError = () => {\n  return {\n    type: SET_USER_ERROR\n  };\n};\nexport const toggleIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    payload: isFetching\n  };\n};\nexport const getRepos = (page = 1, limit = 4, nick) => {\n  return dispatch => {\n    axios.get(`https://api.github.com/users/${nick}/repos`, {\n      params: {\n        page: page,\n        per_page: limit\n      }\n    }).then(res => dispatch(setUserRepo(res.data)));\n  };\n};","map":{"version":3,"sources":["/home/jears0177/Projects/Paralect/startup-summer2021/src/store/reducers/user.js"],"names":["axios","SET_USER_DATA","SET_USER_REPO","SET_USER_NAME","SET_PAGE","SET_USER_ERROR","TOGGLE_IS_FETCHING","initialState","user","repo","name","page","userError","isFetching","userReducer","state","action","type","payload","setUserName","setUserData","data","setUserRepo","setUserError","toggleIsFetching","getRepos","limit","nick","dispatch","get","params","per_page","then","res"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst SET_USER_DATA = 'SET_USER_DATA'\nconst SET_USER_REPO = 'SET_USER_REPO'\nconst SET_USER_NAME = 'SET_USER_NAME'\nconst SET_PAGE = 'SET_PAGE'\nconst SET_USER_ERROR = 'SET_USER_ERROR'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\n\nconst initialState = {\n    user: {},\n    repo: [],\n    name: '',\n    page: null,\n    userError: false,\n    isFetching: false\n}\n\n\nexport const userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {...state, user: {...action.payload}, userError: false}\n        case SET_USER_REPO:\n            return {...state, repo: [...action.payload]}\n        case SET_USER_NAME:\n            return {...state, name: action.payload}\n        case SET_USER_ERROR:\n            return {...state, userError: true}\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.payload}\n        case SET_PAGE:\n            return {...state, page: action.payload}\n\n        default:\n            return {...state}\n\n    }\n}\n\nexport const setUserName = (name) => {\n    return {type: SET_USER_NAME, payload: name}\n}\n\nexport const setUserData = (data) => {\n    return {\n        type: SET_USER_DATA,\n        payload: data\n    }\n}\n\nexport const setUserRepo = (data) => {\n    return {\n        type: SET_USER_REPO,\n        payload: data\n    }\n}\n\nexport const setUserError = () => {\n    return {\n        type: SET_USER_ERROR\n    }\n}\n\nexport const toggleIsFetching = (isFetching) => {\n    return {\n        type: TOGGLE_IS_FETCHING,\n        payload: isFetching\n    }\n}\n\nexport const getRepos = (page = 1, limit = 4, nick) => {\n    return (dispatch) => {\n        axios.get(`https://api.github.com/users/${nick}/repos`, {\n            params: {\n                page: page,\n                per_page: limit\n            }\n        }).then(res => dispatch(setUserRepo(res.data)))\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}